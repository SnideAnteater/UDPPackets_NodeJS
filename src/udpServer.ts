import express, { Request, Response } from "express";
import dotenv from "dotenv";
import * as dgram from "dgram";

dotenv.config();
const app = express();

const SERVER_PORT: any = process.env.SERVERPORT;
const PORT: any = process.env.PORT;
const TARGETIP: any = process.env.TARGETIP;
const HOST: any = process.env.HOST;

// Create a UDP server
const server = dgram.createSocket("udp4");
// Sending data packets every second
setInterval(() => {

  // Define a byte value (e.g., 0x01)
// const byteValue = 0x77 0xfb 0x01 0x01 0x90 0x01 0x90 0x23; // This is a single byte with value 1 in hexadecimal
// const message2 = Buffer.from([0x77, 0xFB, 0x01, 0x01, 0x90, 0x01, 0x90, 0x23]);
// 0x77, 0xfb, 0x02, 0x01, 0x16, 0x01, 0xc8, 0x00, 0x1e, 0x00, 0x3c, 0x3c
//  0x02, 0x00, 0x00, 0x00, 0x45, 0x00, 0x00, 0x24, 0xfb, 0xf1, 0x00, 0x00, 0x80, 0x11, 0x00, 0x00, 0x7f, 0x00, 0x00, 0x01, 0x7f, 0x00, 0x00, 0x01, 0xe7, 0x8f, 0x1f, 0x9a, 0x00, 0x10, 0xb0, 0xc6, 0x77, 0xfb, 0x01, 0x04, 0xb0, 0x03, 0x20, 0xd8

// 0x02, 0x00, 0x00, 0x00, 0x45, 0x00, 0x00, 0x28, 0xff, 0x52, 0x00, 0x00, 0x80, 0x11, 0x00, 0x00,
// 0x7f, 0x00, 0x00, 0x01, 0x7f, 0x00, 0x00, 0x01, 0xd1, 0xda, 0x1f, 0x9a, 0x00, 0x14, 0x6f, 0x18,
// 0x77, 0xfb, 0x02, 0x03, 0xcf, 0x01, 0x38, 0x03, 0xcf, 0x01, 0x51, 0x31



// // Screen Size Protocol
// const message2 = Buffer.from([ 
//   0x77, 0xfb, 0x01, 0x04, 0xb0, 0x03, 0x20, 0xd8]);

// Coordinates Protocol
const message2 = Buffer.from([
0x77, 0xfb, 0x02, 0x01, 0x13, 0x01, 0x51, 0x01, 0x13, 0x01, 0x38, 0xb5]);

// // Coordinates Protocol
// const message2 = Buffer.from([
// 0x77, 0xfb, 0x02, 0x02, 0x0d, 0x00, 0x57, 0x68]);

// 77 fb 02 01 13 01 51 01 13 01 38 b5


// Send the packet to a client listening on the same port
server.send(message2, 0, message2.length, PORT, TARGETIP, (err) => {
  if (err) console.error(err);
  else console.log("Packet sent:", message2); // Log the raw buffer
});
}, 1000);


server.on("error", (err) => {
  console.error("Server error:", err);
  server.close();
});

server.on("listening", () => {
  const address = server.address();
  console.log(`Server listening on ${address.address}:${address.port}`);
});

server.bind(SERVER_PORT, TARGETIP);
